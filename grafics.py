# -*- coding: utf-8 -*-
"""Grafics.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1JFy8n_Fxvxg_mvcRI47Y6-KGy5xbJjLw
"""

!pip install matplotlib

import matplotlib.pyplot as plt

# Datos para el gráfico de barras
categorias = ['GPT2-Small\nQuarter data', 'GPT2-Small\nHalf data', 'GPT2-Small\nFull data', 'GPT2-Medium\nQuarter data', 'GPT2-Medium\nHalf data', 'GPT2-Medium\nFull data']
valores = [0, 0, 0, 0, 0, 0]

# Crear el gráfico de barras
plt.bar(categorias, valores, color='#88AAAA')
plt.xticks(rotation=90, ha="right")

# Añadir etiquetas y título
plt.xlabel('Models/Mida del fine tunning')
plt.ylabel('% de f1-score')
plt.title('Comparació del recall del diferents models')

# Establecer límites del eje y de 0 a 100
plt.ylim(0, 100)

# Mostrar el gráfico
plt.show()

# train
x = [500,1000,1500,2000]
y = [1.592,1.0491,0.7609,0.5941]
# devel
x1 = [500,1000,1500,2000]
y1 = [2.775291,3.04881,3.32776,3.586080]

# Crear el gráfico lineal
plt.plot(x, y, label='Training Loss')
plt.plot(x1, y1, label='Validation Loss')


# Personalizar el gráfico (opcional)
plt.title('Loss Function')
plt.xlabel('Steps')
plt.ylabel('Loss')
plt.legend()  # Muestra la etiqueta 'Mi línea'

# Mostrar el gráfico
plt.show()